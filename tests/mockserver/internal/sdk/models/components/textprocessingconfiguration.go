// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
)

type TextProcessingConfiguration struct {
	// The chunk size to use for the document. This is the number of characters to use for the chunk. The default is 2000 characters.
	TextProcessingChunkSize *int64 `default:"2000" json:"text_processing.chunk_size"`
	// The chunk overlap to use for the document. This is the number of characters to overlap between chunks. The default is 200 characters.
	TextProcessingChunkOverlap *int64 `default:"200" json:"text_processing.chunk_overlap"`
}

func (t TextProcessingConfiguration) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TextProcessingConfiguration) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TextProcessingConfiguration) GetTextProcessingChunkSize() *int64 {
	if o == nil {
		return nil
	}
	return o.TextProcessingChunkSize
}

func (o *TextProcessingConfiguration) GetTextProcessingChunkOverlap() *int64 {
	if o == nil {
		return nil
	}
	return o.TextProcessingChunkOverlap
}
